digraph "Mesh"
{
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{Mesh\n|+ std::vector\< Material\l \> materials\l+ const std::string name\l+ DRAW_MODE mode\l+ unsigned vertexBuffer\l+ unsigned colorBuffer\l+ unsigned indexBuffer\l+ unsigned indexSize\l+ unsigned textureID\l+ Vector3 * botLeftPos\l+ Vector3 * topRightPos\l+ Vector3 * meshCenter\l+ static unsigned locationKa\l+ static unsigned locationKd\l+ static unsigned locationKs\l+ static unsigned locationNs\l|+  Mesh(const std::string\l &meshName)\l+  ~Mesh()\l+ void Render()\l+ void Render(unsigned\l offset, unsigned count)\l+ static void SetMaterialLoc\l(unsigned kA, unsigned kD,\l unsigned kS, unsigned nS)\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="To store VBO (vertex & color buffer) and IBO (index buffer)"];
  Node2 -> Node1 [color="grey25",fontsize="10",style="solid",label=" +material" ,arrowhead="odiamond",fontname="Helvetica"];
  Node2 [label="{Material\n|+ unsigned size\l+ float kShininess\l|+  Material()\l+ Material & operator\l=(const Material &rhs)\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_material.html",tooltip="Game Object's material attributes."];
  Node3 -> Node2 [color="grey25",fontsize="10",style="solid",label=" +kAmbient\n+kDiffuse\n+kSpecular" ,arrowhead="odiamond",fontname="Helvetica"];
  Node3 [label="{Component\n|+ float r\l+ float g\l+ float b\l|+  Component(float r\l=0.1f, float g=0.1f,\l float b=0.1f)\l+ void Set(float r, float\l g, float b)\l+ Component & operator\l=(const Component &rhs)\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_component.html",tooltip="R,G,B Values of Material."];
}
